/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "custom-button": {
    name: "custom-button",
    description: "A customizable button component with various variants and sizes",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/custom-button/custom-button.tsx",
      type: "registry:component",
      target: "components/custom-button.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/custom-button/custom-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "custom-button"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"CustomButton","description":"A customizable button component with various variants and sizes for different use cases."},
  },
  "modal": {
    name: "modal",
    description: "A comprehensive modal system with dialog and responsive variants",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/modal/modal.tsx",
      type: "registry:component",
      target: "components/modal.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/modal/modal.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "modal"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Modal","description":"A comprehensive modal system with dialog and responsive variants for different screen sizes and use cases."},
  },
  "modal-variants": {
    name: "modal-variants",
    description: "Modal variants demonstration",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/modal/modal-variants.tsx",
      type: "registry:component",
      target: "components/modal-variants.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/modal/modal-variants.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "modal-variants"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Modal Variants","description":"Demonstration of different modal variants and types."},
  },
  "custom-button-variants": {
    name: "custom-button-variants",
    description: "Custom button variants demonstration",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/custom-button/custom-button-variants.tsx",
      type: "registry:component",
      target: "components/custom-button-variants.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/custom-button/custom-button-variants.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "custom-button-variants"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Custom Button Variants","description":"Demonstration of different custom button variants and sizes."},
  },
  "form": {
    name: "form",
    description: "React Hook Form components with validation and formatting",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/form/form.tsx",
      type: "registry:component",
      target: "components/form.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/form/form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "form"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Form Components","description":"Complete form system with RHF integration, validation, formatting, and error handling."},
  },
  "form-variants": {
    name: "form-variants",
    description: "Form components variants demonstration",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/form/form-variants.tsx",
      type: "registry:component",
      target: "components/form-variants.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/form/form-variants.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "form-variants"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Form Variants","description":"Demonstration of different form component variants and layouts."},
  },
  "map": {
    name: "map",
    description: "Interactive map component with location selection and address fetching",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/map/map.tsx",
      type: "registry:component",
      target: "components/map.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/map/map.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "map"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Map","description":"Interactive map component with location selection, address fetching, and various customization options."},
  },
  "map-variants": {
    name: "map-variants",
    description: "Map component variants demonstration",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/map/map-variants.tsx",
      type: "registry:component",
      target: "components/map-variants.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/map/map-variants.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "map-variants"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Map Variants","description":"Demonstration of different map component variants and configurations."},
  },
  "pagination": {
    name: "pagination",
    description: "A smart pagination component with intelligent page range display",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/pagination/pagination.tsx",
      type: "registry:component",
      target: "components/pagination.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/pagination/pagination.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "pagination"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Pagination","description":"A smart pagination component with intelligent page range display and navigation controls."},
  },
  "pagination-variants": {
    name: "pagination-variants",
    description: "Pagination component variants demonstration",
    type: "registry:component",
    registryDependencies: undefined,
    files: [{
      path: "registry/custom-ui/pagination/pagination-variants.tsx",
      type: "registry:component",
      target: "components/pagination-variants.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/custom-ui/pagination/pagination-variants.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || "pagination-variants"
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["components"],
    meta: {"title":"Pagination Variants","description":"Demonstration of different pagination component variants and page count scenarios."},
  },
  }